<?php
/**
 * Copyright Â© 2015 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

?>
<?php
/**
 * Product list toolbar
 *
 * @var $block \Magento\Catalog\Block\Product\ProductList\Toolbar
 */
use Ekr\Catalog\Model\Product\ProductList\Toolbar;

/**
 * get attribute directly from table.
 * @param  int $entity_id    product id
 * @param  int $attribute_id attribute id
 * @return return value
 */
function getProductAttribute($entity_id,$attribute_id,$table = "catalog_product_entity_int"){

    $objectManager = \Magento\Framework\App\ObjectManager::getInstance(); // Instance of object manager
    $resource = $objectManager->get('Magento\Framework\App\ResourceConnection');
    $connection = $resource->getConnection();
    $tableName = $resource->getTableName($table); //gives table name with prefix
    $sql = "SELECT value FROM " . $tableName . " WHERE `entity_id` = '{$entity_id}' AND `attribute_id`='{$attribute_id}'";
    $result = $connection->fetchAll($sql);
    $value = (@$result[0]['value'])? $result[0]['value'] : "";
    return $value;
}


?>
<?php /*if ($block->getCollection()->getSize()):*/
    if($block->isExpanded()):
        $filters = $block->getFilters();
        $baseMetals = $block->getBaseMetalFilters();
        $prices = $block->getPriceFilters();
        $options = $block->getOptionFilters();
        $filter_base_metal = @$_GET['base_metal'];
        $filter_inlay = @$_GET['inlay'];
        $filter_price = @$_GET['price'];


        $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
        $layerResolver = $objectManager->get('\Magento\Catalog\Model\Layer\Resolver');
        $layer = $layerResolver->get();
        $activeFilters = $layer->getState()->getFilters();

        $sel_baseMetal = $sel_inlay = $sel_price = [];
        if($filter_base_metal || $filter_inlay || $filter_price):
            foreach ($activeFilters as $filter):
                $name = $filter->getName();
                switch($name):
                    case "Base Metal":
                        if(@$_GET['base_metal']):
                            $sel_baseMetal = [
                                'value' => $_GET['base_metal'],
                                'label' => ""
                            ];
                        endif;
                    break;
                    case "Inlay":
                        if(@$_GET['inlay']):
                            $sel_inlay = [
                                'value' => $_GET['inlay'],
                                'label' => ""
                            ];
                        endif;
                    break;
                    case "Price":
                        if(@$_GET['price']):

                            $arr = explode('-',$_GET['price']);
                            if(count($arr) > 1):
                                $label = "$" . $arr[0] . "-$" . $arr[1];
                            else:
                                $label = "$" . $arr[0] . "+";
                            endif;

                            $sel_price = [
                                'value' => $_GET['price'],
                                'label' => $label
                            ];
                        endif;
                    break;
                endswitch;
            endforeach;
        endif;
    ?>
    <div id="filter">
        <div class="closer"></div>
        <section class="filter-options">
            <div class="filter-option metal">
                <h3>
                    Base Metal
                </h3>
                <?php if(!empty($baseMetals)): ?>
                    <ul>
                        <?php foreach($baseMetals as $baseMetal):
                            $selected = ($baseMetal->getValue() == @$_GET['base_metal'])? "selected" : ""; ?>
                            <li class="<?php echo $selected; ?>" data-filter="<?= $baseMetal->getFilter()->getRequestVar() ?>" data-value="<?= $baseMetal->getValue() ?>"><?= $baseMetal->getLabel() ?></li>
                        <?php endforeach;
                        if(empty($baseMetals) && !empty($sel_baseMetal)): ?>
                            <li class="selected" data-filter="base_metal" data-value="<?php echo $sel_baseMetal['value']; ?>"><?php echo $sel_baseMetal['label']; ?></li>
                        <?php endif; ?>
                    </ul>
                <?php endif; ?>
            </div>

            <div class="filter-option options">
                <h3>
                    Options
                </h3>
                <?php if(!empty($options)): ?>
                    <ul>
                        <?php foreach($options as $option):
                            $selected = ($option->getValue() == @$_GET['inlay'])? "selected" : ""; ?>
                            <li class="<?php echo $selected; ?>" data-filter="<?= $option->getFilter()->getRequestVar() ?>" data-value="<?= $option->getValue() ?>"><?= $option->getLabel() ?></li>
                        <?php endforeach;
                        if(empty($options) && !empty($sel_inlay)): ?>
                            <li class="selected" data-filter="inlay" data-value="<?php echo $sel_inlay['value']; ?>"><?php echo $sel_inlay['label']; ?></li>
                        <?php endif; ?>
                    </ul>
                <?php endif; ?>
            </div>

            <div class="filter-option price">
                <h3>
                    Price Range
                </h3>
                <?php if(!empty($prices)): ?>
                    <ul>
                        <?php foreach($prices as $price):
                                $priceLabel = str_replace(" and above", "+",$price->getLabel());
                                $priceLabel = preg_replace('/\.[0-9][0-9]/', "", $priceLabel);
                                $selected = ($price->getValue() == @$_GET['price'])? "selected" : ""; 
                                ?>
                            <li class="<?php echo $selected; ?>" data-filter="<?= $price->getFilter()->getRequestVar() ?>" data-value="<?= $price->getValue() ?>"><?=  $priceLabel ?></li>
                        <?php endforeach;
                        if(empty($prices) && !empty($sel_price)): ?>
                            <li class="selected" data-filter="price" data-value="<?php echo $sel_price['value']; ?>"><?php echo $sel_price['label']; ?></li>
                        <?php endif; ?>
                    </ul>
                <?php endif; ?>
            </div>

        </section>
        <section class="filter-controls">
            <button id="apply-filter">
                Apply Filter
            </button>
            <button id="clear-filter">
                Clear Filter
            </button>
        </section>

    </div>
<?php endif; ?>
    <div class="toolbar toolbar-products" data-mage-init='<?php /* @escapeNotVerified */ echo $block->getWidgetOptionsJson(); ?>'>


        <?php echo $block->getPagerHtml() //might need this for the bottom toolbar ?>

        <?php if ($block->isExpanded()): ?>
            <span class="filter-activation">Filter</span>
            <?php include ($block->getTemplateFile('Magento_Catalog::product/list/toolbar/sorter.phtml')) ?>
            <?php include ($block->getTemplateFile('Magento_Catalog::product/list/toolbar/viewmode.phtml')) ?>
        <?php endif; ?>
    </div>
<?php if ($block->isExpanded()): ?>
    <script>
        //ensure the JS code runs once as Magento puts the module in twice.
        if(typeof numToolbars == 'undefined'){
            var numToolbars = 1;
        }
        else{
            numToolbars++;
        }
        if(numToolbars == 2){

            function setGetParameters(obj){
                var startQuery = window.location.search.substring(1);
                var currentParams = {};
                var search = /([^&=]+)=?([^&]*)/g;
                var match;
                var qString;

                while(match = search.exec(startQuery)){
                    currentParams[match[1]] = match[2].replace(/\+/g, " ");
                }

                for(var name in obj){
                    currentParams[name] = obj[name];
                }
                /*console.log(currentParams);
                return;*/

                qString = '?' +
                    Object.keys(currentParams).map(function(key) {
                        value = decodeURIComponent(currentParams[key]);
                        return encodeURIComponent(key) + '=' +
                            encodeURIComponent(value);
                    }).join('&');
                window.location.href = qString;

            }

            var filterBox = document.getElementById("filter");
            var filterBoxes = document.querySelectorAll("#filter");
            var filterActivator = document.querySelector(".filter-activation");
            var selectables = filterBox.querySelectorAll(".filter-option li");
            var applyFilterBtn = document.getElementById("apply-filter");
            var clearFilterBtn = document.getElementById("clear-filter");
            var sortTitle = document.querySelector(".sort-title");
            var sortOptionsBox = document.querySelector(".sorter-options");
            var sortOptions = document.querySelectorAll(".sorter-options span");

            for(var i = 1; i < filterBoxes.length;++i){
                filterBoxes[i].remove();
            }
            document.getElementById("maincontent").appendChild(filterBox);

            filterActivator.addEventListener("click", function(e){
                e.stopPropagation();
                filterBox.classList.add("active");

                return false;
            });

            filterBox.querySelector(".closer").addEventListener("click", function(){
                filterBox.classList.remove("active");
            });

            for(var i = 0; i < selectables.length;++i){
                selectables[i].addEventListener("click", function(){
                    this.classList.toggle("selected");


                    if(this.classList.contains("selected")){
                        console.log("**");
                        var allLikeMe = filterBox.querySelectorAll("li[data-filter='" + this.dataset.filter + "']");
                        console.log(allLikeMe);
                        for(var i = 0; i < allLikeMe.length;++i){
                            if(allLikeMe[i] != this){
                                allLikeMe[i].classList.remove("selected");
                            }
                        }
                    }

                });
            }

            for(var j = 0; j < sortOptions.length;++j){
                sortOptions[j].addEventListener("click", function(){
                    setGetParameters({"product_list_mode":this.dataset.value});
                });
            }

            sortTitle.addEventListener("click", function(){
                this.classList.toggle("open");
                sortOptionsBox.classList.toggle("open");
            });

            applyFilterBtn.addEventListener("click", function(){
                var activeItems = filterBox.querySelectorAll(".selected");
                var dataItems = {};
                for(var i = 0; i < activeItems.length;++i){
                    dataItems[activeItems[i].dataset.filter] = activeItems[i].dataset.value;
                }

                setGetParameters(dataItems);

            });

            clearFilterBtn.addEventListener("click", function(){
                window.location.href = "<?= $block->getClearUrl() ?>";
            });
        }
    </script>
<?php endif; /*endif*/;
include ($block->getTemplateFile('Magento_Catalog::product/list/toolbar/limiter.phtml')); ?>

